
int main() {
    random_device rd;
    uniform_int_distribution<int> d6(1, 6);

    // Player 1 stats
    string player1Name;
    int player1Str;
    int player1Def;
    int player1Armor;
    int player1Skill;
    int player1Wins;

    // Player 2 stats
    string player2Name;
    int player2Str;
    int player2Def;
    int player2Armor;
    int player2Skill;
    int player2Wins;

    cout << "Setup Player 1" << endl;
    setupPlayerStats(player1Name, player1Str, player1Def, player1Armor, player1Skill, player1Wins);

    cout << "Setup Player 2" << endl;
    setupPlayerStats(player2Name, player2Str, player2Def, player2Armor, player2Skill, player2Wins);
    return 0;
}



void setupPlayerStats(string &name, int &str, int &def, int &armor, int &skill, int &wins) {
    // TODO: Load the character's file or create a new character.
    fstream file;
    cout << "Name: ";
    getline(cin, name);

    // If they enter no name, use a default
    if (name == "") {
        name = "John Doe";
    }
    string filename = name + ".txt";

    file.open(filename, ios::in);
    if (file.is_open()) {
        // File exists, read data from file
        cout << "File found, loading from file." << endl;
        file >> str;
        file >> def;
        file >> armor;
        file >> skill;
        file >> wins;
    }
    else {
        // File doesn't exist, have the user fill it in
        bool accepted = false;
        while (!accepted) {
            int points = 20;

            cout << points << " points left." << endl;
            cout << "Player Str: ";
            cin >> str;
            points -= str;

            cout << points << " points left." << endl;
            cout << "Player Def: ";
            cin >> def;
            points -= def;

            cout << points << " points left." << endl;
            cout << "Player Armor: ";
            cin >> armor;
            points -= armor;

            cout << points << " points left." << endl;
            cout << "Player Skill: ";
            cin >> skill;
            points -= skill;

            wins = 0;
            if (points >= 0) {
                accepted = true;
            }
            else {
                cout << "You used too many points!" << endl;
            }
        }
    }
}
